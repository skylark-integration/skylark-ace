/**
 * skylark-ace - A version of ace v1.4.3 that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["../lib/oop","../lib/net","../lib/event_emitter","../config"],function(e,t,a,i){"use strict";var r=a.EventEmitter;function s(e){if("undefined"==typeof Worker)return{postMessage:function(){},terminate:function(){}};if(i.get("loadWorkerFromBlob")){var a=function(e){var a="importScripts('"+t.qualifyURL(e)+"');";try{return new Blob([a],{type:"application/javascript"})}catch(e){var i=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder);return i.append(a),i.getBlob("application/javascript")}}(e),r=(window.URL||window.webkitURL).createObjectURL(a);return new Worker(r)}return new Worker(e)}var n=function(e){e.postMessage||(e=this.$createWorkerFromOldConfig.apply(this,arguments)),this.$worker=e,this.$sendDeltaQueue=this.$sendDeltaQueue.bind(this),this.changeListener=this.changeListener.bind(this),this.onMessage=this.onMessage.bind(this),this.callbackId=1,this.callbacks={},this.$worker.onmessage=this.onMessage};(function(){e.implement(this,r),this.$createWorkerFromOldConfig=function(e,t,a,r,n){if(require.nameToUrl&&!require.toUrl&&(require.toUrl=require.nameToUrl),i.get("packaged")||!require.toUrl)r=r||i.moduleUrl(t,"worker");else{var o=this.$normalizePath;r=r||o(require.toUrl("ace/worker/worker.js",null,"_"));var l={};e.forEach(function(e){l[e]=o(require.toUrl(e+"/").replace(/(\.js)?(\?.*)?$/,""))})}return this.$worker=s(r),n&&this.send("importScripts",n),this.$worker.postMessage({init:!0,tlns:l,module:t,classname:a}),this.$worker},this.onMessage=function(e){var t=e.data;switch(t.type){case"event":this._signal(t.name,{data:t.data});break;case"call":var a=this.callbacks[t.id];a&&(a(t.data),delete this.callbacks[t.id]);break;case"error":this.reportError(t.data);break;case"log":window.console&&console.log&&console.log.apply(console,t.data)}},this.reportError=function(e){window.console&&console.error&&console.error(e)},this.$normalizePath=function(e){return t.qualifyURL(e)},this.terminate=function(){this._signal("terminate",{}),this.deltaQueue=null,this.$worker.terminate(),this.$worker=null,this.$doc&&this.$doc.off("change",this.changeListener),this.$doc=null},this.send=function(e,t){this.$worker.postMessage({command:e,args:t})},this.call=function(e,t,a){if(a){var i=this.callbackId++;this.callbacks[i]=a,t.push(i)}this.send(e,t)},this.emit=function(e,t){try{t.data&&t.data.err&&(t.data.err={message:t.data.err.message,stack:t.data.err.stack,code:t.data.err.code}),this.$worker.postMessage({event:e,data:{data:t.data}})}catch(e){console.error(e.stack)}},this.attachToDocument=function(e){this.$doc&&this.terminate(),this.$doc=e,this.call("setValue",[e.getValue()]),e.on("change",this.changeListener)},this.changeListener=function(e){this.deltaQueue||(this.deltaQueue=[],setTimeout(this.$sendDeltaQueue,0)),"insert"==e.action?this.deltaQueue.push(e.start,e.lines):this.deltaQueue.push(e.start,e.end)},this.$sendDeltaQueue=function(){var e=this.deltaQueue;e&&(this.deltaQueue=null,e.length>50&&e.length>this.$doc.getLength()>>1?this.call("setValue",[this.$doc.getValue()]):this.emit("change",{data:e}))}}).call(n.prototype);return{UIWorkerClient:function(e,t,a){var s=null,o=!1,l=Object.create(r),c=[],u=new n({messageBuffer:c,terminate:function(){},postMessage:function(e){c.push(e),s&&(o?setTimeout(h):h())}});u.setEmitSync=function(e){o=e};var h=function(){var e=c.shift();e.command?s[e.command].apply(s,e.args):e.event&&l._signal(e.event,e.data)};return l.postMessage=function(e){u.onMessage({data:e})},l.callback=function(e,t){this.postMessage({type:"call",id:t,data:e})},l.emit=function(e,t){this.postMessage({type:"event",name:e,data:t})},i.loadModule(["worker",t],function(e){for(s=new e[a](l);c.length;)h()}),u},WorkerClient:n,createWorker:s}});
//# sourceMappingURL=../sourcemaps/worker/worker_client.js.map
